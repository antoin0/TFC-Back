# Generated by Django 5.2 on 2025-05-02 08:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsuarioPersonalizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('biografia', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Personaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=15)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('clase', models.CharField(choices=[('stalker', 'Stalker'), ('mecanico', 'Mecanico'), ('ciberchaman', 'Ciberchaman'), ('granjero', 'Granjero')], default='stalker', max_length=12)),
                ('fuerza', models.IntegerField()),
                ('velocidad', models.IntegerField()),
                ('intelig', models.IntegerField()),
                ('combat', models.IntegerField()),
                ('sanity', models.IntegerField()),
                ('fear', models.IntegerField()),
                ('cuerpo', models.IntegerField()),
                ('maxHP', models.IntegerField()),
                ('maxWounds', models.IntegerField(default=2)),
                ('stress', models.IntegerField(default=2)),
                ('traumaRes', models.CharField(choices=[('stalker', 'Cuando entras en panico, todo aliado cercano debe hacer una salvacion de MIEDO'), ('mecanico', 'Los jugadores cercanos a ti tienen desventaja en las salvaciones de MIEDO'), ('ciberchaman', 'Cuando fallas una salvación de cordura, todos los jugadores cercanos ganan 1 ESTRÉS'), ('granjero', 'Una vez por sesion, puedes tener ventaja en un check de PANICO')], default='stalker', max_length=12)),
                ('dinero', models.IntegerField(blank=True)),
                ('armorPoints', models.IntegerField(blank=True)),
                ('extras', models.TextField(blank=True, max_length=500)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personajes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Arma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30)),
                ('precio', models.IntegerField(default=10)),
                ('danho', models.TextField(max_length=5)),
                ('crit', models.TextField(max_length=30)),
                ('alcance', models.CharField(choices=[('short', 'Short'), ('long', 'Long'), ('melee', 'Melee')], default='long', max_length=12)),
                ('tiros', models.IntegerField(blank=True)),
                ('especial', models.TextField(blank=True)),
                ('ammoPrice', models.TextField(blank=True)),
                ('personaje', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='armas', to='demon.personaje')),
            ],
        ),
    ]
